plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "org.jetbrains.kotlin.plugin.compose"
    id "kotlin-kapt"
    id "com.google.dagger.hilt.android"
}

apply from: '../android-lint.gradle'
apply from: '../android-force-deps-upgrades.gradle'

// The endpoint URLs and trusted org keys for the PROD stack
Properties prodConfig = new Properties()
prodConfig.load(project.rootProject.file("coverdrop-prod.properties").newDataInputStream())

// The endpoint URLs and trusted org keys for the STAGING stack
Properties stagingConfig = new Properties()
stagingConfig.load(project.rootProject.file("coverdrop-staging.properties").newDataInputStream())

android {
    namespace "com.theguardian.coverdrop"
    compileSdk libs.versions.compileSdk.get().toInteger()

    defaultConfig {
        minSdk libs.versions.minSdk.get().toInteger()
        targetSdk libs.versions.targetSdk.get().toInteger()

        applicationId "com.theguardian.coverdrop"
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.theguardian.coverdrop.audit.runner.HiltTestRunner"

        vectorDrawables {
            useSupportLibrary true
        }
    }

    splits {
        abi {
            enable true
            reset()
            include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
            universalApk true
        }
    }

    buildTypes {
        // Variant that is closely mimicking the production version of the main app (points to PROD).
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.debug

            buildConfigField "Boolean", "LOCAL_TEST_MODE_ENABLED", "false"
            buildConfigField "Boolean", "SCREEN_CAPTURE_PROTECTION_DISABLED", "false"

            buildConfigField "String", "API_BASE_URL", prodConfig.getProperty("coverdrop.apiBaseUrl")
            buildConfigField "String", "MESSAGING_BASE_URL", prodConfig.getProperty("coverdrop.fastlyBaseUrl")
            buildConfigField "String", "TRUSTED_ORG_PKS", prodConfig.getProperty("coverdrop.trustedOrgPks")
        }

        // A release variant that has certain security features disable to simplify testing (points to PROD)
        // That's a version we can hand-over to UX testing or copy writers.
        ux {
            initWith release
            matchingFallbacks = ["release"]

            buildConfigField "Boolean", "SCREEN_CAPTURE_PROTECTION_DISABLED", "true"
        }

        // A UX variant that points to STAGING
        uxstaging {
            initWith release
            matchingFallbacks = ["release"]

            buildConfigField "Boolean", "SCREEN_CAPTURE_PROTECTION_DISABLED", "true"

            buildConfigField "String", "API_BASE_URL", stagingConfig.getProperty("coverdrop.apiBaseUrl")
            buildConfigField "String", "MESSAGING_BASE_URL", stagingConfig.getProperty("coverdrop.fastlyBaseUrl")
            buildConfigField "String", "TRUSTED_ORG_PKS", stagingConfig.getProperty("coverdrop.trustedOrgPks")
        }

        // The default variant for local development (points to STAGING).
        debug {
            debuggable true

            buildConfigField "Boolean", "LOCAL_TEST_MODE_ENABLED", "true"
            buildConfigField "Boolean", "SCREEN_CAPTURE_PROTECTION_DISABLED", "true"

            buildConfigField "String", "API_BASE_URL", stagingConfig.getProperty("coverdrop.apiBaseUrl")
            buildConfigField "String", "MESSAGING_BASE_URL", stagingConfig.getProperty("coverdrop.fastlyBaseUrl")
            buildConfigField "String", "TRUSTED_ORG_PKS", stagingConfig.getProperty("coverdrop.trustedOrgPks")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = libs.versions.java.get().toInteger()
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.compiler.get()
    }

    packagingOptions {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }

    // work-around: https://issuetracker.google.com/issues/217593040#comment6
    kotlinOptions {
        freeCompilerArgs += [
                "-Xjvm-default=all",
        ]
    }
}

dependencies {
    // Change the in the following two lines the expression `project(:$1)` to
    // `"com.theguardian.coverdrop:$1:0.0.1"` to build against the local maven artefacts.
    // This can also be done by running `scripts/patch_app_to_use_maven.sh`.
    implementation project(":core")
    implementation project(":ui")
    implementation platform(libs.androidx.compose.bom)

    kapt libs.hilt.compiler
    kaptAndroidTest libs.hilt.android.compiler

    implementation libs.androidx.activity.compose
    implementation libs.androidx.core.ktx
    implementation libs.androidx.compose.material
    implementation libs.androidx.compose.runtimeLiveData
    implementation libs.squareup.okhttp3.okhttp
    implementation libs.squareup.okhttp3.dnsoverhttps

    implementation libs.hilt.android

    testImplementation libs.junit
    androidTestImplementation project(":testutils")
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation libs.hilt.android.testing
    androidTestImplementation libs.truth
}

kapt {
    correctErrorTypes true
}
