import {
  EuiModal,
  EuiModalHeader,
  EuiModalHeaderTitle,
  EuiModalBody,
  EuiForm,
  EuiModalFooter,
  EuiButtonEmpty,
  EuiButton,
  EuiFormRow,
  EuiFieldText,
  EuiTextArea,
} from "@elastic/eui";
import { FormEvent } from "react";

type EditUserModalProps = {
  setUserAlias: (userAlias: string) => void;
  setUserDescription: (userDescription: string) => void;
  userAutogeneratedName: string;
  closeModal: () => void;
  handleFormSubmit: (
    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,
  ) => void;
  draftUserAlias: string;
  userAlias: string | null;
  draftUserDescription: string;
};

export const EditUserModal = ({
  setUserAlias,
  setUserDescription,
  userAutogeneratedName,
  closeModal,
  handleFormSubmit,
  draftUserAlias,
  userAlias,
  draftUserDescription,
}: EditUserModalProps) => {
  return (
    <EuiModal onClose={closeModal}>
      <EuiModalHeader>
        <EuiModalHeaderTitle>
          Edit source <i>{userAlias ? userAlias : userAutogeneratedName}</i>
        </EuiModalHeaderTitle>
      </EuiModalHeader>
      <EuiModalBody>
        <EuiForm
          component="form"
          onSubmit={(e: FormEvent<HTMLFormElement>) => {
            e.preventDefault();
          }}
        >
          <EuiFormRow>
            <EuiFieldText
              placeholder="Provide a user alias for your source"
              name="popfirst"
              onChange={(e) => {
                if (e.target.value.length <= 30) {
                  setUserAlias(e.target.value);
                }
              }}
              value={draftUserAlias}
              maxLength={30}
              isInvalid={draftUserAlias.length > 30}
            />
          </EuiFormRow>
          <EuiFormRow>
            <EuiTextArea
              placeholder="Provide a description for your source"
              value={draftUserDescription}
              onChange={(e) => setUserDescription(e.target.value)}
            />
          </EuiFormRow>
        </EuiForm>
      </EuiModalBody>
      <EuiModalFooter>
        <EuiButtonEmpty onClick={closeModal}>Cancel</EuiButtonEmpty>
        <EuiButton
          type="submit"
          form={"Submit user name and description"}
          fill
          onClick={handleFormSubmit}
        >
          Save
        </EuiButton>
      </EuiModalFooter>
    </EuiModal>
  );
};
