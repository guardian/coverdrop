import { EuiFlexGroup, EuiFlexItem, useEuiTheme } from "@elastic/eui";
import { UserStatus } from "../model/bindings/UserStatus";
import { palette } from "../styles/palette";
import { PerChatMenu } from "./PerChatMenu";
import { useState } from "react";

export const ChatHeader = ({
  userAlias,
  userAutogeneratedName,
  currentUserStatus,
  userDescription,
  showMuteModal,
  showEditModal,
  markAsUnread,
  showCopyToClipboardModal,
}: {
  userAlias: string | null;
  userAutogeneratedName: string;
  currentUserStatus: UserStatus;
  userDescription: string;
  showMuteModal: () => void;
  showEditModal: () => void;
  markAsUnread: () => void;
  showCopyToClipboardModal: () => void;
}) => {
  const headerName = userAlias
    ? `${userAlias} (${userAutogeneratedName})`
    : userAutogeneratedName;

  const { euiTheme } = useEuiTheme();
  const { font, size } = euiTheme;

  const [isOptionsMenuOpen, setIsOptionsMenuOpen] = useState(false);

  return (
    <EuiFlexItem
      grow={false}
      style={{
        fontSize: `calc(${size.base} + 2)`,
        fontWeight: font.weight,
        borderBottom: `1px solid ${palette("chat-header-border-color")}`,
        padding: `${size.m} ${size.base}`,
        background: palette("chat-header-background"),
        zIndex: 100, // prevent chat from scrolling over the header
        position: "sticky",
        top: 0,
      }}
    >
      <EuiFlexGroup direction="row" gutterSize="s" alignItems="center">
        <EuiFlexItem
          style={{
            fontSize: "18px",
            fontWeight: "bold",
          }}
          grow={true}
        >
          {headerName}
        </EuiFlexItem>
        <EuiFlexItem grow={false}>
          <PerChatMenu
            isOpen={isOptionsMenuOpen}
            setIsOpen={setIsOptionsMenuOpen}
            shouldShowLabel={true}
            hasUnread={false}
            markAsUnread={markAsUnread}
            isMuted={currentUserStatus === "MUTED"}
            showEditModal={showEditModal}
            showMuteModal={showMuteModal}
            showCopyToClipboardModal={showCopyToClipboardModal}
          />
        </EuiFlexItem>
      </EuiFlexGroup>
      {userDescription ? (
        <EuiFlexGroup
          direction="row"
          gutterSize="s"
          style={{
            fontSize: "15px",
            paddingTop: "4px",
            marginRight: "80px",
          }}
        >
          <EuiFlexItem grow={true}>{userDescription}</EuiFlexItem>
        </EuiFlexGroup>
      ) : null}
    </EuiFlexItem>
  );
};
