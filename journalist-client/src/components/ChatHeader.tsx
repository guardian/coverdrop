import {
  EuiButton,
  EuiButtonIcon,
  EuiFlexGroup,
  EuiFlexItem,
  useEuiTheme,
} from "@elastic/eui";
import { UserStatus } from "../model/bindings/UserStatus";
import { palette } from "../styles/palette";

export const ChatHeader = ({
  userAlias: userAlias,
  userAutogeneratedName: userAutogeneratedName,
  currentUserStatus,
  userDescription,
  setIsMuteModalVisible: setIsMuteModalVisible,
  setIsEditModalVisible: setIsEditModalVisible,
  markAsUnread,
}: {
  userAlias: string | null;
  userAutogeneratedName: string;
  currentUserStatus: UserStatus;
  userDescription: string;
  setIsMuteModalVisible: (isVisible: boolean) => void;
  setIsEditModalVisible: (isVisible: boolean) => void;
  markAsUnread: () => void;
}) => {
  const headerName = userAlias
    ? `${userAlias} (${userAutogeneratedName})`
    : userAutogeneratedName;

  const { euiTheme } = useEuiTheme();
  const { font, size } = euiTheme;

  return (
    <EuiFlexItem
      grow={false}
      style={{
        fontSize: `calc(${size.base} + 2)`,
        fontWeight: font.weight,
        borderBottom: `1px solid ${palette("chat-header-border-color")}`,
        paddingBottom: size.m,
        paddingTop: size.m,
        paddingLeft: size.base,
        background: palette("chat-header-background"),
        zIndex: 100, // prevent chat from scrolling over the header
        position: "sticky",
        top: 0,
      }}
    >
      <EuiFlexGroup direction="row" gutterSize="s" alignItems="center">
        <EuiFlexItem
          style={{
            fontSize: "18px",
            fontWeight: "bold",
          }}
          grow={true}
        >
          {headerName}
        </EuiFlexItem>
        <EuiFlexItem grow={false}>
          <EuiButton
            size="s"
            iconType="dot"
            aria-label="info"
            color="primary"
            onClick={markAsUnread}
            title="Mark as unread"
          >
            Mark as unread
          </EuiButton>
        </EuiFlexItem>
        <EuiFlexItem grow={false}>
          <EuiButtonIcon
            size="s"
            display="base"
            iconType="pencil"
            aria-label="info"
            color="primary"
            onClick={() => setIsEditModalVisible(true)}
            title="Update source details"
          />
        </EuiFlexItem>
        <EuiFlexItem grow={false}>
          {currentUserStatus === "ACTIVE" ? (
            <EuiButtonIcon
              size="s"
              display="base"
              iconType="bellSlash"
              aria-label="info"
              color="primary"
              onClick={() => setIsMuteModalVisible(true)}
              title="Mute source"
              style={{ marginRight: "12px" }}
            />
          ) : (
            <EuiButtonIcon
              size="s"
              display="base"
              iconType="bell"
              aria-label="info"
              color="primary"
              onClick={() => setIsMuteModalVisible(true)}
              title="Unmute source"
              style={{ marginRight: "12px" }}
            />
          )}
        </EuiFlexItem>
      </EuiFlexGroup>
      {userDescription ? (
        <EuiFlexGroup
          direction="row"
          gutterSize="s"
          style={{
            fontSize: "15px",
            paddingTop: "4px",
            marginRight: "80px",
          }}
        >
          <EuiFlexItem grow={true}>{userDescription}</EuiFlexItem>
        </EuiFlexGroup>
      ) : null}
    </EuiFlexItem>
  );
};
