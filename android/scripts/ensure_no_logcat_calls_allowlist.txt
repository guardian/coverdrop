app/src/androidTest/java/com/theguardian/coverdrop/audit/StorageAuditTest.kt:            Log.i("StorageAuditTest", "$path -> $permissions")
app/src/main/java/com/theguardian/coverdrop/tracking/SampleLifecycleListener.kt:        Log.i("SampleLifecycleListener", "onActivityCreated ${activity.localClassName}")
app/src/main/java/com/theguardian/coverdrop/tracking/SampleLifecycleListener.kt:        Log.i("SampleLifecycleListener", "onActivityDestroyed ${activity.localClassName}")
app/src/main/java/com/theguardian/coverdrop/tracking/SampleLifecycleListener.kt:        Log.i("SampleLifecycleListener", "onActivityPaused ${activity.localClassName}")
app/src/main/java/com/theguardian/coverdrop/tracking/SampleLifecycleListener.kt:        Log.i("SampleLifecycleListener", "onActivityResumed ${activity.localClassName}")
app/src/main/java/com/theguardian/coverdrop/tracking/SampleLifecycleListener.kt:        Log.i("SampleLifecycleListener", "onActivitySaveInstanceState ${activity.localClassName}")
app/src/main/java/com/theguardian/coverdrop/tracking/SampleLifecycleListener.kt:        Log.i("SampleLifecycleListener", "onActivityStarted ${activity.localClassName}")
app/src/main/java/com/theguardian/coverdrop/tracking/SampleLifecycleListener.kt:        Log.i("SampleLifecycleListener", "onActivityStopped ${activity.localClassName}")
core/src/androidTest/java/com/theguardian/coverdrop/core/background/BackgroundWorkTest.kt:            .setMinimumLoggingLevel(Log.VERBOSE)
core/src/androidTest/java/com/theguardian/coverdrop/core/background/BackgroundWorkTest.kt:        workInfos.forEach { Log.d("BackgroundWorkTest", "WorkInfo: $it") }
core/src/androidTest/java/com/theguardian/coverdrop/core/crypto/Benchmarks.kt:        Log.i(BENCHMARK_TAG, "iterations: $iterations")
core/src/androidTest/java/com/theguardian/coverdrop/core/crypto/Benchmarks.kt:        Log.i(BENCHMARK_TAG, "per: $individualTimeMs ms")
core/src/androidTest/java/com/theguardian/coverdrop/core/crypto/Benchmarks.kt:        Log.i(BENCHMARK_TAG, "total: ${difference.toMillis()} ms")
core/src/main/java/com/theguardian/coverdrop/core/CoverDropLib.kt:            Log.d("CoverDropLib", "CoverDrop failed to initialize: $e")
core/src/main/java/com/theguardian/coverdrop/core/CoverDropPublicDataRepository.kt:                    Log.d("ApiResponseCache", "failed to send from queue: $e")
core/src/main/java/com/theguardian/coverdrop/core/api/ApiResponseCache.kt:                Log.d("ApiResponseCache", "failed to download new dead-drops: $e")
core/src/main/java/com/theguardian/coverdrop/core/api/ApiResponseCache.kt:                Log.d("ApiResponseCache", "failed to download published keys: $e")
core/src/main/java/com/theguardian/coverdrop/core/api/ApiResponseCache.kt:                Log.d("ApiResponseCache", "failed to download status event: $e")
core/src/main/java/com/theguardian/coverdrop/core/persistence/CoverDropFileManager.kt:                Log.d("CoverDropFileManager", "Migrating: $oldFile")
ui/src/main/java/com/theguardian/coverdrop/ui/activities/CoverDropActivity.kt:            Log.d(
ui/src/main/java/com/theguardian/coverdrop/ui/activities/CoverDropActivity.kt:            Log.d("CoverDropActivity", "Screen capture protection disabled as per config")
